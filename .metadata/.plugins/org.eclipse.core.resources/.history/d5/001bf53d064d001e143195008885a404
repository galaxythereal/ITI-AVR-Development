#include <avr/io.h>
#include <util/delay.h>

// Function to initialize Timer/Counter1 for PWM
void Servo_Init() {
    // Set Fast PWM mode with non-inverted output
    TCCR1A |= (1 << WGM11) | (1 << COM1A1);

    // Set Fast PWM mode with 8-bit resolution
    TCCR1B |= (1 << WGM12) | (1 << WGM13);

    // Set prescaler to 64
    TCCR1B |= (1 << CS10) | (1 << CS11);

    // Set the initial servo position (middle position)
    OCR1A = 150; // Adjust this value to calibrate the servo
    _delay_ms(500); // Delay to allow servo to reach the initial position
}

// Function to set the servo angle in degrees (0 to 180)
void Servo_SetAngle(uint8_t angle) {
    if (angle < 0) angle = 0;
    if (angle > 180) angle = 180;

    // Map angle to PWM pulse width
    uint16_t pulse_width = 1000 + (angle * 10); // Adjust this formula based on your servo's specifications

    // Set the PWM pulse width
    OCR1A = pulse_width;
}

int main() {
    // Initialize the servo
    Servo_Init();

    while (1) {
        // Move the servo to 0 degrees (fully counter-clockwise)
        Servo_SetAngle(0);
        _delay_ms(1000);

        // Move the servo to 90 degrees (middle position)
        Servo_SetAngle(90);
        _delay_ms(1000);

        // Move the servo to 180 degrees (fully clockwise)
        Servo_SetAngle(180);
        _delay_ms(1000);
    }

    return 0;
}
